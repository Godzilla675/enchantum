#include "test_utility.hpp" // For CATCH2 macros, might need <catch2/catch_test_macros.hpp> if not included by this
#include <catch2/catch_test_macros.hpp> // Explicitly include for TEST_CASE and REQUIRE
#include <enchantum/enchantum.hpp>

// An enum with many members to test the binary size impact.
// ENCHANTUM_REFLECT needs to be used for enchantum::cast to work with it.
enum class LargeEnum {
  Entry0,
  Entry1,
  Entry2,
  Entry3,
  Entry4,
  Entry5,
  Entry6,
  Entry7,
  Entry8,
  Entry9,
  Entry10,
  Entry11,
  Entry12,
  Entry13,
  Entry14,
  Entry15,
  Entry16,
  Entry17,
  Entry18,
  Entry19,
  Entry20,
  Entry21,
  Entry22,
  Entry23,
  Entry24,
  Entry25,
  Entry26,
  Entry27,
  Entry28,
  Entry29,
  Entry30,
  Entry31,
  Entry32,
  Entry33,
  Entry34,
  Entry35,
  Entry36,
  Entry37,
  Entry38,
  Entry39,
  Entry40,
  Entry41,
  Entry42,
  Entry43,
  Entry44,
  Entry45,
  Entry46,
  Entry47,
  Entry48,
  Entry49,
  Entry50,
  Entry51,
  Entry52,
  Entry53,
  Entry54,
  Entry55,
  Entry56,
  Entry57,
  Entry58,
  Entry59,
  Entry60,
  Entry61,
  Entry62,
  Entry63,
  Entry64,
  Entry65,
  Entry66,
  Entry67,
  Entry68,
  Entry69,
  Entry70,
  Entry71,
  Entry72,
  Entry73,
  Entry74,
  Entry75,
  Entry76,
  Entry77,
  Entry78,
  Entry79,
  Entry80,
  Entry81,
  Entry82,
  Entry83,
  Entry84,
  Entry85,
  Entry86,
  Entry87,
  Entry88,
  Entry89,
  Entry90,
  Entry91,
  Entry92,
  Entry93,
  Entry94,
  Entry95,
  Entry96,
  Entry97,
  Entry98,
  Entry99
};

ENCHANTUM_REFLECT(
  LargeEnum,
  Entry0,
  Entry1,
  Entry2,
  Entry3,
  Entry4,
  Entry5,
  Entry6,
  Entry7,
  Entry8,
  Entry9,
  Entry10,
  Entry11,
  Entry12,
  Entry13,
  Entry14,
  Entry15,
  Entry16,
  Entry17,
  Entry18,
  Entry19,
  Entry20,
  Entry21,
  Entry22,
  Entry23,
  Entry24,
  Entry25,
  Entry26,
  Entry27,
  Entry28,
  Entry29,
  Entry30,
  Entry31,
  Entry32,
  Entry33,
  Entry34,
  Entry35,
  Entry36,
  Entry37,
  Entry38,
  Entry39,
  Entry40,
  Entry41,
  Entry42,
  Entry43,
  Entry44,
  Entry45,
  Entry46,
  Entry47,
  Entry48,
  Entry49,
  Entry50,
  Entry51,
  Entry52,
  Entry53,
  Entry54,
  Entry55,
  Entry56,
  Entry57,
  Entry58,
  Entry59,
  Entry60,
  Entry61,
  Entry62,
  Entry63,
  Entry64,
  Entry65,
  Entry66,
  Entry67,
  Entry68,
  Entry69,
  Entry70,
  Entry71,
  Entry72,
  Entry73,
  Entry74,
  Entry75,
  Entry76,
  Entry77,
  Entry78,
  Entry79,
  Entry80,
  Entry81,
  Entry82,
  Entry83,
  Entry84,
  Entry85,
  Entry86,
  Entry87,
  Entry88,
  Entry89,
  Entry90,
  Entry91,
  Entry92,
  Entry93,
  Entry94,
  Entry95,
  Entry96,
  Entry97,
  Entry98,
  Entry99)

TEST_CASE("Binary size check for large enum cast", "[binary_size_test]")
{
  // This instantiation is what will affect the binary size.
  auto val = enchantum::cast<LargeEnum>("Entry50");
  REQUIRE(val.has_value());
  REQUIRE(val.value() == LargeEnum::Entry50);

  // Also test a non-existent entry to ensure full map usage if relevant
  auto val_non_existent = enchantum::cast<LargeEnum>("Entry150");
  REQUIRE_FALSE(val_non_existent.has_value());
}
