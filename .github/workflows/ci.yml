name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.platform.name }} -  ${{ matrix.build_type.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: Windows MSVC, os: windows-latest, compiler: msvc, flags: "" }
          - { name: Windows Clang 16, os: windows-latest, compiler: clang, version: 16.0.0, flags: "-DCMAKE_CXX_COMPILER=clang++" }
          - { name: Windows Clang 17, os: windows-latest, compiler: clang, version: 17.0.1, flags: "-DCMAKE_CXX_COMPILER=clang++" }
          - { name: Windows Clang 18, os: windows-latest, compiler: clang, version: 18, flags: "-DCMAKE_CXX_COMPILER=clang++" }
          - { name: Windows Clang 19, os: windows-latest, compiler: clang, version: 19, flags: "-DCMAKE_CXX_COMPILER=clang++" }
          - { name: Windows Clang 20, os: windows-latest, compiler: clang, version: 20.1.2, flags: "-DCMAKE_CXX_COMPILER=clang++" }

          - { name: MacOS Clang Latest, os: macos-latest, compiler: clang, flags: "-DCMAKE_CXX_COMPILER=clang++" }

          - { name: Ubuntu GCC 12,    os: ubuntu-latest, compiler: gcc, version: 12, flags: "-DCMAKE_CXX_COMPILER=g++" }
          - { name: Ubuntu GCC 13,    os: ubuntu-latest, compiler: gcc, version: 13, flags: "-DCMAKE_CXX_COMPILER=g++" }
          - { name: Ubuntu GCC 14,    os: ubuntu-latest, compiler: gcc, version: 14, flags: "-DCMAKE_CXX_COMPILER=g++" }
          - { name: Ubuntu Clang 16,  os: ubuntu-latest, compiler: clang, version: 16, flags: "-DCMAKE_CXX_COMPILER=clang++" }
          - { name: Ubuntu Clang 17,  os: ubuntu-latest, compiler: clang, version: 17, flags: "-DCMAKE_CXX_COMPILER=clang++" }
          - { name: Ubuntu Clang 18,  os: ubuntu-latest, compiler: clang, version: 18, flags: "-DCMAKE_CXX_COMPILER=clang++" }
          - { name: Ubuntu Clang 19,  os: ubuntu-latest, compiler: clang, version: 19, flags: "-DCMAKE_CXX_COMPILER=clang++" }
          - { name: Ubuntu Clang 20,  os: ubuntu-latest, compiler: clang, version: 20, flags: "-DCMAKE_CXX_COMPILER=clang++" }
        build_type:
          - { name: Debug,   flags: "-DCMAKE_BUILD_TYPE=Debug" }
          - { name: Release, flags: "-DCMAKE_BUILD_TYPE=Release" }

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Setup MSVC Dev Command Prompt
        if: runner.os == 'Windows' && matrix.platform.compiler == 'msvc'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup Clang
        if: runner.os != 'macos' && matrix.platform.compiler == 'clang'
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.platform.version }}

      - name: Setup GCC
        if: matrix.platform.compiler == 'gcc'
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.platform.version }}

      - name: Configure CMake
        run: >
          cmake -B build
          -G Ninja
          ${{ matrix.platform.flags }}
          ${{ matrix.build_type.flags }}
          -DENCHANTUM_BUILD_TESTS=ON

      - name: Build
        run: cmake --build build

      - name: Run Tests
        run: ctest --test-dir build --output-on-failure
