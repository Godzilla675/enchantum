name: CMake on Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # Run the job on Windows
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up CMake
      # CMake should already be installed on the Windows runner, but we are ensuring the latest version.
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --force

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # On Windows, Visual Studio is used by default. No need for the `-DCMAKE_BUILD_TYPE` flag.
      run: cmake -B ${{github.workspace}}/build -G "Visual Studio 17 2022" -A x64

    - name: Build
      # Build your program with the given configuration. We are using Visual Studio's build system here.
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # On Windows, you can use `ctest` to run the tests.
      run: ctest -C ${{env.BUILD_TYPE}}
